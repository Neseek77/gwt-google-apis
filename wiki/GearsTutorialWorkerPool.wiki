#summary Using the Gears WorkerPool in a GWT project

  _NOTE: This Document is not complete_

= Creating your project =

Start by creating a new GWT project. This example uses the `applicationCreator` tool.  It would be easiest to start with this tool because it sets up all the classpaths for you. Create a sample with this tool, then, if you want to add the API to another project, you can compare the differences in the project files generated by the tool.

= Updating command line launch scripts =

First, create a project with `projectCreator` and `applicationCreator` as shown in the [http://code.google.com/docreader/#p(google-web-toolkit-doc-1-5)s(google-web-toolkit-doc-1-5)t(GettingStarted) GWT Getting Started tutorial] and the [http://code.google.com/docreader/#p(google-web-toolkit-doc-1-5)s(google-web-toolkit-doc-1-5)t(DevGuideDeveloperGuide) Developer Guide].  In the following example, the GWT Google API jar file `gwt-gears.jar` has been unpacked in `/usr/local/gwt-gears`

{{{
$PP_OFF
$ projectCreator -eclipse GearsWorkerPoolTutorial -out GearsWorkerPoolTutorial \
     -addToClassPath /usr/local/gwt-gears/gwt-gears.jar
Created directory GearsWorkerPoolTutorial/src
Created directory GearsWorkerPoolTutorial/test
Created file GearsWorkerPoolTutorial/.project
Created file GearsWorkerPoolTutorial/.classpath

$ applicationCreator -eclipse GearsWorkerPoolTutorial \ 
     -out GearsWorkerPoolTutorial \
     -addToClassPath /usr/local/gwt-gears/gwt-gears.jar \
     -addModule com.google.gwt.gears.Gears \
     com.example.google.gwt.gearsworkerpooltutorial.client.GearsWorkerPoolTutorial
Created directory GearsWorkerPoolTutorial/src/com/example/google/gwt/gearsworkerpooltutorial
Created directory GearsWorkerPoolTutorial/src/com/example/google/gwt/gearsworkerpooltutorial/client
Created directory GearsWorkerPoolTutorial/src/com/example/google/gwt/gearsworkerpooltutorial/public
Created file GearsWorkerPoolTutorial/src/com/example/google/gwt/gearsworkerpooltutorial/GearsWorkerPoolTutorial.gwt.xml
Created file GearsWorkerPoolTutorial/src/com/example/google/gwt/gearsworkerpooltutorial/public/GearsWorkerPoolTutorial.html
Created file GearsWorkerPoolTutorial/src/com/example/google/gwt/gearsworkerpooltutorial/public/GearsWorkerPoolTutorial.css
Created file GearsWorkerPoolTutorial/src/com/example/google/gwt/gearsworkerpooltutorial/client/GearsWorkerPoolTutorial.java
Created file GearsWorkerPoolTutorial/GearsWorkerPoolTutorial.launch
Created file GearsWorkerPoolTutorial/GearsWorkerPoolTutorial-shell
Created file GearsWorkerPoolTutorial/GearsWorkerPoolTutorial-compile
}}}

This command sets up a standard project, plus adds the library `/usr/local/gwt-maps/gwt-gears.jar` to the Java classpath for the launch, compile and .and eclipse definitions.


Test to see that hosted mode and web mode work by running the `GearsWorkerPoolTutorial-shell` script.  You should see the skeleton project come up:

  http://gwt-google-apis.googlecode.com/svn/wiki/GettingStartedBasic1.png

Also try out the `GearsWorkerPoolTutorial-compile` script:

{{{
$PP_OFF
$ ./GearsWorkerPoolTutorial-compile
Compiling into ./www/com.example.google.gwt.mapstutorial.MapsTutorial
Copying all files found on public path
Compilation succeeded
}}}


= Creating a Small Project  =

Before continuing, make sure you can launch the skeleton project in hosted mode by either running _!GearsWorkerPoolTutorial-shell_ from the command line or using the _Run_ configuration from Eclipse.  Make sure you test the _Compile/Browse_ button in hosted mode as well.  If you encounter any problems, read back over the previous instructions.  If you still need help, try searching and/or posting to the Google-Web-Toolkit group.

== Modify GearsWorkerPoolTutorial.gwt.xml ==

The Gears plugin is a component that must be installed by users and is not supported on all browser configurations.  Thus, you will want to redirect users when your application detects that the Gears plugin is not available.  You can create a rebind rule in your GWT module that will redirect users to a different page in this instance.

{{{
  <!-- Rebind the entry point if Gears is not installed -->
  <replace-with class="com.example.google.gwt.gearsworkerpooltutorial.client.NoGears">
    <when-type-is class="com.example.google.gwt.gearsworkerpooltutorial.client.GearsWorkerPoolTutorial"/>
    <when-property-is name="gears.installed" value="false"/>
  </replace-with>
}}}

== Update the HTML host file ==

Replace the body of the HTML host file `com/example/google/gwt/mapstutorial/public/MapsTutorial.html` with a `<div>` tag that we can use for the GWT application.

{{{
<body>

    <h1>GearsWorkerPoolTutorial</h1>

    <div id="gearsTutorial">

</body>
}}}

== Use a WorkerPool object in the  .java source ==


  *TBD*

== Create an alternative EntryPoint ==

This alternative !EntryPoint class is used when the Gears plugin is not detected in the browser.  Save this class as `NoGears.java` in the same package with the `GearsWorkerPoolTutorial` class.

{{{
package com.example.google.gwt.gearsworkerpooltutorial.client;

import com.google.gwt.user.client.ui.HTML;
import com.google.gwt.user.client.ui.RootPanel;

/**
 * This entry point will be used when no Gears plugin is detected
 */
public class NoGears {
  public void onModuleLoad() {
    RootPanel rootPanel = RootPanel.get();
    rootPanel.add(new HTML(
        "<font color=\"red\">ERROR: This browser does not support Gears. "
        + " Please <a href=\"http://gears.google.com/\">install Gears</a> " 
        + "and reload the application.  Note that GWT Gears applications can "
        + "only be debugged in hosted mode on Windows.</font>"));
  }
}
}}}

== Run the GearsWorkerPoolTutorial sample project ==

Now, you should be able to execute your sample project in hosted mode by  launch the skeleton project in hosted mode by either running _!GearsWorkerPoolTutorial-shell_ from the command line or using the _Run_ configuration from Eclipse.  

 _ Note: Using hosted mode with the Gears project will only work in
the Windows OS as of the GWT 1.5 release. _

If you would like to see your project in your host's web browser (web mode), press the _Compile/Browse_ button in hosted mode.

== Using Eclipse ==

The `projectCreator` task creates an eclipe configuration file to import into your Ecilpse workspace.  

Use the `File-->Import...` command to navigate to the directory where you created the project and import it into the workspace.  Once the project is imported, you will see that the following items have been configured for you:

   * A classpath that contains the `gwt-gears`.jar file.
   * A launch configuration that contains the source directory for your project on your class path.
