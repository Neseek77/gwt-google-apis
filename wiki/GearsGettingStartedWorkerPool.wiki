#summary Using the Gears WorkerPool in a GWT project

= Creating a new GWT project =


Start by creating a new GWT project called !GearsWorkerPoolTutorial as described in the [http://code.google.com/docreader/#p(google-web-toolkit-doc-1-5)s(google-web-toolkit-doc-1-5)t(GettingStarted) GWT Tutorial]. 

Since we are working with an additional library, we use the command line argument `-addToClassPath` which adds the library `/usr/local/gwt-gears/gwt-gears.jar` to the Java classpath for the launch, compile and .and eclipse definitions. Note that for the purposes of this example we assume `gwt-gears.jar` has been unpacked in `/usr/local/gwt-gears` and that you are using the Eclipse IDE.

{{{
$PP_OFF
$ projectCreator -eclipse GearsWorkerPoolTutorial -out GearsWorkerPoolTutorial \
     -addToClassPath /usr/local/gwt-gears/gwt-gears.jar
}}}

{{{
$PP_OFF
$ applicationCreator -eclipse GearsWorkerPoolTutorial \
     -out GearsWorkerPoolTutorial \
     -addToClassPath /usr/local/gwt-gears/gwt-gears.jar \
     -addModule com.google.gwt.gears.Gears \
     com.example.google.gwt.gearsworkerpooltutorial.client.GearsWorkerPoolTutorial
}}}

This command sets up a standard project, plus adds the library `/usr/local/gwt-maps/gwt-gears.jar` to the Java classpath for the launch, compile and .and eclipse definitions.


Test to see that hosted mode and web mode work by running the `GearsWorkerPoolTutorial-shell` script.  You should see the skeleton project come up:

  http://gwt-google-apis.googlecode.com/svn/wiki/GettingStartedBasic1.png

Also try out the `GearsWorkerPoolTutorial-compile` script:

{{{
$PP_OFF
$ ./GearsWorkerPoolTutorial-compile
Compiling into ./www/com.example.google.gwt.mapstutorial.MapsTutorial
Copying all files found on public path
Compilation succeeded
}}}

You should now have a standard project set up. Before continuing, make sure you can launch the skeleton project in hosted mode by either running _!GearsWorkerPoolTutorial-shell_ from the command line or using the _Run_ configuration from Eclipse. 

You should see the skeleton project come up:

  http://gwt-google-apis.googlecode.com/svn/wiki/GettingStartedBasic1.png

Also test out compilation with the `GearsWorkerPoolTutorial-compile` script or the _Compile/Browse_ button in hosted mode

{{{
$PP_OFF
$ ./GearsWorkerPoolTutorial-compile
Compiling into ./www/com.example.google.gwt.gearsstutorial.GearsWorkerPoolTutorial
Copying all files found on public path
Compilation succeeded
}}}

== Update the HTML host file ==

Replace the body of the HTML host file `com/example/google/gwt/gearsworkerpooltutorial/public/GearsWorkerPoolTutorial.html` with a `<div>` tag that we can use for the GWT application.

{{{
<body>

    <h1>GearsWorkerPoolTutorial</h1>

    <div id="gearsTutorial">

</body>
}}}

== Use a WorkerPool object in the  .java source ==



== A simple !JavaScript worker ==

Save the following file as `com/example/google/gwt/gearsworkerpooltutorial/public/worker.js`.  This worker just echoes the message back to the sender with a message... after waiting for a few seconds.

{{{
// worker.js A simple Gears WorkerPool demo
google.gears.workerPool.onmessage = function(a, b, message) {
  google.gears.workerPool.sendMessage(doWork(message.body), message.sender);
};

function doWork(message) {
  // Busy wait for 5 seconds
  var start = new Date();
  while (true) {
    var busyCounter = 10000;
    var busyVar;
    while (busyCounter-- > 0) {
       busyVar = "garbage" + busyCounter;
    }
    var now = new Date();
    if (now.getTime().getTime() - start.getTime > 5000) {
	break;
    }
  }

  return "Approved: " + message;
};

}}}

== How to deal with browsers that do not support Gears ==

The Gears plugin is a component that must be installed by users and is not supported on all browser configurations.  Thus, you will want to let users know when your application detects that the Gears plugin is not installed or not supported.  You can create a rebind rule in your GWT module that will invoke a different !EntryPoint in this instance.

=== Add a new !EntryPoint class ===

The following is an example of an alternative !EntryPoint class is used when the Gears plugin is not detected in the browser.  Save this class as `NoGears.java` in the same package with the `GearsWorkerPoolTutorial` class.

{{{
package com.example.google.gwt.gearsworkerpooltutorial.client;

import com.google.gwt.user.client.ui.HTML;
import com.google.gwt.user.client.ui.RootPanel;

/**
 * This entry point will be used when no Gears plugin is detected
 */
public class NoGears {
  public void onModuleLoad() {
    RootPanel rootPanel = RootPanel.get();
    rootPanel.add(new HTML(
        "<font color=\"red\">ERROR: This browser does not support Gears. "
        + " Please <a href=\"http://gears.google.com/\">install Gears</a> " 
        + "and reload the application.  Note that GWT Gears applications can "
        + "only be debugged in hosted mode on Windows.</font>"));
  }
}
}}}

=== Modify !GearsWorkerPoolTutorial.gwt.xml ===

In order to tell the compiler to add logic to the selection script to pull up your rebound entry point, you need to create a [http://code.google.com/docreader/#p(google-web-toolkit-doc-1-5)s(google-web-toolkit-doc-1-5)t(DevGuideDeferredBindingReplacement) replace-class-with] rule in your `gwt.xml` module file.  

{{{
  <!-- Rebind the entry point if Gears is not installed -->
  <replace-with class="com.example.google.gwt.gearsworkerpooltutorial.client.NoGears">
    <when-type-is class="com.example.google.gwt.gearsworkerpooltutorial.client.GearsWorkerPoolTutorial"/>
    <when-property-is name="gears.installed" value="false"/>
  </replace-with>
}}}

== Run the !GearsWorkerPoolTutorial sample project ==

Now, you should be able to execute your sample project in hosted mode by either running _!GearsWorkerPoolTutorial-shell_ from the command line or using the _Run_ configuration from Eclipse.  

 _ Note: Using hosted mode with the Gears project will only work on Windows as of the GWT 1.5 release. _

If you would like to see your project in your host's web browser (web mode), press the _Compile/Browse_ button in hosted mode.  Try your application in a browser with and without the Gears plugin installed to see how it behaves.
