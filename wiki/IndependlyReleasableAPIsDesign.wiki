#summary Conversion to independently releasable API bindings for GWT.

= Introduction =

This document covers the conversion of the Google API Library for GWT from a single monolithic JAR, into a set of API specific jars that can be developed and released independently.

= Goals =
  * Allow GWT bindings to be developed and released independently.
  * Make the process of developing GWT bindings easier.

= Directory Layout for the Project as Whole =
Every API will live in its own directory under the project root.  The directory should have the following layout:
  * common.ant.xml - Common build rules that APIs can use.
  * build - APIs will emit their build artifacts into child directories
  * ajaxsearch
  * gadgets
  * gears
  * maps
  * ... other APIs

== Directory Layout for Each API ==
Each API will live in its own directory.  It is assumed that the invoking ant in that directory will produce an image suitable for distribution.  The layout of this directory is assumed to be as follows:
  * build.xml - This file contains all of the rules needed to produce an image suitable for distribution.
  * distro-source
  * doc
  * eclipse
  * (gwt bindings source code)
  * samples

= Directory Layout for API distribution = 
  * COPYING
  * COPYING.html
  * about.txt
  * about.html
  * doc
    * javadoc
  * api_specific.jar
  * release_notes.html
  * samples

= Build ant script targets =
  * build (default)
  * checkstyle
  * clean
  * doc
  * samples
  * test
    * test.hosted
    * test.remoteweb
    * test.web

= Issue Tracking =
  * Issues should be labeled with an API specific label - maps for JS maps, gears for gears, etc.

= Open Issues =
  * Make sure that APIs that depend on different versions of JSIO can play nicely with each other.
  * Provide a devdocreader documentation template?
  * Provide template build scripts for new APIs
  * What should the COPYING files be for each top distro?